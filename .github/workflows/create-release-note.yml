on: 
  pull_request:
    types: [closed]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        id: create_release
        env:
          PRODUCTION_BRANCH: master
          TZ: Asia/Tokyo
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pr = context.payload.pull_request
            if (!(pr.merged && pr.base.ref === process.env.PRODUCTION_BRANCH)) return;

            const merged_at = new Date(pr.merged_at);
            const tag_name = String(merged_at.getFullYear()).padStart(4, '0')
              + '-' + + String(merged_at.getMonth() + 1).padStart(2, '0')
              + '-' + String(merged_at.getDate()).padStart(2, '0')
              + ' ' + String(merged_at.getHours()).padStart(2, '0')
              + ':' + String(merged_at.getMinutes()).padStart(2, '0')
              + ':' + String(merged_at.getSeconds()).padStart(2, '0');

            return await github.repos.createRelease({
              ...context.repo,
              draft: true,
              tag_name: tag_name,
              name: tag_name,
              target_commitish: process.env.GITHUB_SHA,
              body: pr.body
            });

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/plain